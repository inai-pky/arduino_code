// FND 세그먼트 핀 번호 (a부터 g 순서)
const int segments[] = {2, 3, 4, 5, 6, 7, 8, 9};


byte digits[10][8] = {// 표현할 숫자들을 저장하는 변수 digits를 정의
  {1,1,1,0,0,1,1,1}, // 0
  {1,0,0,0,0,1,0,0}, // 1
  {1,1,0,0,1,0,1,1}, // 2
  {0,1,1,0,1,0,1,1}, // 3
  {0,0,1,0,1,1,1,0}, // 4
  {0,1,1,0,1,1,0,1}, // 5
  {1,1,1,0,1,1,0,0}, // 6
  {0,0,1,0,0,0,1,1}, // 7
  {1,1,1,0,1,1,1,1}, // 8
  {0,0,1,0,1,1,1,1}  // 9
};

byte test[10][8] = {// 데이터에 따른 제어 세그먼트 찾기기
  {1,0,0,0,0,0,0,0}, 
  {0,1,0,0,0,0,0,0}, 
  {0,0,1,0,0,0,0,0}, 
  {0,0,0,1,0,0,0,0}, 
  {0,0,0,0,1,0,0,0}, 
  {0,0,0,0,0,1,0,0}, 
  {0,0,0,0,0,0,1,0}, 
  {0,0,0,0,0,0,0,1}, 
  {1,1,1,1,1,1,1,1}, 
  {0,0,0,0,0,0,0,0}  
};

void setup() {
  // 세그먼트 핀들을 출력 모드로 설정
  for (int i = 0; i < 8; i++) {
    pinMode(segments[i], OUTPUT);
  }
  // 9번 핀은 사용하지 않으므로 필요에 따라 다른 용도로 활용 가능
}

void loop() {

  for (int i =0; i < 10; i++){

    displayDigit(i); // 숫자 1 표시
    delay(1000);

  }

}

// FND에 숫자 표시하는 함수
void displayDigit(int digit) {
  if (digit >= 0 && digit <= 10) {
    for (int i = 0; i < 9; i++) {
      digitalWrite(segments[i], test[digit][i]);
    }
  }
}