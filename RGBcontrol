// RGB LED 각 핀에 연결된 아두이노 핀 번호를 정의합니다.
// PWM 기능을 지원하는 핀을 사용해야 합니다 (보통 ~ 표시가 있는 핀).
const int redPin = 9;    // 빨간색 LED 핀
const int greenPin = 10; // 초록색 LED 핀
const int bluePin = 11;  // 파란색 LED 핀

// 색상 값을 저장할 구조체를 정의합니다 (선택 사항이지만 관리가 용이합니다).
struct Color {
  int r, g, b;
};

// 주요 색상들을 미리 정의합니다.
const Color RED = {255, 0, 0};
const Color GREEN = {0, 255, 0};
const Color BLUE = {0, 0, 255};
const Color YELLOW = {255, 255, 0};
const Color MAGENTA = {255, 0, 255};
const Color CYAN = {0, 255, 255};
const Color WHITE = {255, 255, 255};
const Color ORANGE = {255, 165, 0}; // 주황색 추가
const Color OFF = {0, 0, 0};

void setup() {
  // 각 LED 핀을 출력으로 설정합니다.
  pinMode(redPin, OUTPUT);
  pinMode(greenPin, OUTPUT);
  pinMode(bluePin, OUTPUT);

  // 시리얼 통신을 시작합니다 (선택 사항: 값 확인용).
  Serial.begin(9600);
}

void loop() {
  // 정의된 색상 변수를 사용하여 LED 색상을 변경합니다.

  // 빨간색 밝게
  setColor(RED);
  delay(1000);

  // 초록색 밝게
  setColor(GREEN);
  delay(1000);

  // 파란색 밝게
  setColor(BLUE);
  delay(1000);

  // 노란색
  setColor(YELLOW);
  delay(1000);

  // 자홍색
  setColor(MAGENTA);
  delay(1000);

  // 청록색
  setColor(CYAN);
  delay(1000);

  // 흰색
  setColor(WHITE);
  delay(1000);

  // 주황색
  setColor(ORANGE);
  delay(1000);

  // LED 끄기
  setColor(OFF);
  delay(1000);
}

// RGB 색상을 설정하는 함수 (Color 구조체 사용)
void setColor(Color color) {
  // analogWrite 함수를 사용하여 각 LED의 밝기를 PWM으로 제어합니다.
  // Common Anode 타입의 RGB LED를 사용하는 경우, 값을 반전시켜야 할 수 있습니다.
  // (예: analogWrite(redPin, 255 - color.r);)
  // 여기서는 Common Cathode 타입을 기준으로 작성되었습니다.
  analogWrite(redPin, color.r);
  analogWrite(greenPin, color.g);
  analogWrite(bluePin, color.b);

  // 현재 색상 값을 시리얼 모니터에 출력합니다 (선택 사항).
  Serial.print("R: ");
  Serial.print(color.r);
  Serial.print(" G: ");
  Serial.print(color.g);
  Serial.print(" B: ");
  Serial.println(color.b);
}